diff -u -r ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/perlio.c ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/perlio.c
--- ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/perlio.c	2011-10-19 03:51:48.000000000 +0400
+++ ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/perlio.c	2013-02-28 14:36:26.535467963 +0400
@@ -748,7 +748,7 @@
 	len = strlen(name);
     for (i = 0; i < PL_known_layers->cur; i++) {
 	PerlIO_funcs *f = PL_known_layers->array[i].funcs;
-	if (memEQ(f->name, name, len) && f->name[len] == 0) {
+	if (!strcmp(f->name, name) && f->name[len] == 0) {
 	    PerlIO_debug("%.*s => %p\n", (int) len, name, (void*)f);
 	    return f;
 	}
diff -u -r ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/sv.c ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/sv.c
--- ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/sv.c	2011-10-19 03:51:49.000000000 +0400
+++ ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/400.perlbench/src/sv.c	2013-02-28 14:36:21.125446508 +0400
@@ -4104,6 +4104,25 @@
 =cut
 */
 
+#undef __attribute__
+__attribute__((no_sanitize_address, noinline, disable_sanitizer_instrumentation))
+char *move_no_asan(char *dest, const char *src, STRLEN len) {
+  char *d = (char*)dest;
+  char *s = (char*)src;
+  signed long i, signed_n = len;
+  if (d < s) {
+    for (i = 0; i < signed_n; ++i)
+      d[i] = s[i];
+  } else {
+    if (d > s && signed_n > 0)
+      for (i = signed_n - 1; i >= 0 ; --i) {
+        d[i] = s[i];
+      }
+  }
+  return dest;
+}
+
+__attribute__((no_sanitize_address, disable_sanitizer_instrumentation))
 void
 Perl_sv_setpvn(pTHX_ register SV *sv, register const char *ptr, register STRLEN len)
 {
@@ -4124,7 +4143,8 @@
 
     SvGROW(sv, len + 1);
     dptr = SvPVX(sv);
-    Move(ptr,dptr,len,char);
+    move_no_asan(dptr, ptr, len);
+    // Move(ptr,dptr,len,char);
     dptr[len] = '\0';
     SvCUR_set(sv, len);
     (void)SvPOK_only_UTF8(sv);		/* validate pointer */
diff -u -r ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/biariencode.c ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/biariencode.c
--- ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/biariencode.c	2011-10-19 03:53:14.000000000 +0400
+++ ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/biariencode.c	2013-02-28 15:05:15.622307814 +0400
@@ -327,6 +327,7 @@
  *    Initializes a given context with some pre-defined probability state
  ************************************************************************
  */
+__attribute__((no_sanitize_address, disable_sanitizer_instrumentation))
 void biari_init_context (BiContextTypePtr ctx, const int* ini)
 {
   int pstate;
diff -u -r ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/mv-search.c ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/mv-search.c
--- ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/mv-search.c	2011-10-19 03:53:14.000000000 +0400
+++ ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/464.h264ref/src/mv-search.c	2013-02-28 15:14:41.214541085 +0400
@@ -1016,7 +1016,7 @@
 int
 SATD (int* diff, int use_hadamard)
 {
-  int k, satd = 0, m[16], dd, d[16];
+  int k, satd = 0, m[16], dd, d[16+1];
   
   if (use_hadamard)
   {
diff -u -r ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc
--- ORIG_SPEC_CPU2006v1.2/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc	2011-10-19 03:53:19.000000000 +0400
+++ ASAN_SPEC_CPU2006v1.2/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc	2013-02-28 14:36:05.855385945 +0400
@@ -295,6 +295,7 @@
 }
 #endif
 
+#if 0  // Asan can not link if there is a use-defined operator new
 void *operator new(size_t m)
 {
 #ifdef HEAPCHECK
@@ -400,3 +401,4 @@
     if(id==breakat) brk("DELETE");
 #endif
 }
+#endif
